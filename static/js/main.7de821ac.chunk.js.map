{"version":3,"sources":["store/prompt/reducers.js","store/formBoxes/actions.js","store/formBoxes/reducers.js","store/reducers.js","store/prompt/actions.js","inputsParameters/inputsParameters.js","components/MainContainer/FormBox/InputText/ItemInput/ItemInput.jsx","components/MainContainer/FormBox/InputText/InputText.jsx","components/MainContainer/FormBox/InputCheckbox/InputCheckbox.jsx","components/MainContainer/FormBox/AddBlock/AddTitle.jsx","components/MainContainer/FormBox/AddBlock/AddSpan.jsx","components/MainContainer/FormBox/FormBox.jsx","components/MainContainer/Prompt/Prompt.jsx","components/MainContainer/ButtonSave/ButtonSave.jsx","components/MainContainer/MainContainer.jsx","App.js","serviceWorker.js","index.js","logo.svg"],"names":["prompts","name","text","example","defaultState","checkInputsValue","status","index","type","payload","combineReducers","prompt","state","action","find","el","undefined","boxStatus","InputsParameters","title","typeTitle","textInputs","typeInputText","indexDataInput","additional","ItemInput","props","useState","startDate","setStartDate","className","width","key","typeInput","selected","onChange","date","placeholderText","showYearDropdown","dateFormatCalendar","yearDropdownItemNumber","scrollableYearDropdown","placeholder","onBlur","e","test","target","value","style","background","InputText","indexLastItem","length","mapInputsText","map","includes","InputCheckBox","mapInputsCkeckbox","AddTitle","marginTop","AddSpan","mapDispatchToProps","connect","mapInputs","num","onClick","inputTextStatus","inputCheckboxStatus","box","closest","i","children","classList","contains","x","checked","display","data-index","mapExample","getInputName","mapBoxes","param","Prompt","store","createStore","rootReducer","composeWithDevTools","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.7de821ac.chunk.js","sourcesContent":["import { CHANGE_PROMPTS } from './actions';\r\n\r\nconst prompts = [\r\n  {\r\n    name: 'Фамилия',\r\n    text: 'Указывается фамилия в точном соответствии с указанной в документе. Между двойной фамилией ставится пробел.',\r\n    example: ['ШМАЛОВ', 'Дудь']\r\n  },\r\n  {\r\n    name: 'Имя Отчество',\r\n    text: 'Указывается имя и отвество в точном соответствии с указанной в документе. Между двойной фамилией ставится пробел.',\r\n    example: ['Анатолий Константинович', 'Андрей Адольфович']\r\n  },\r\n  {\r\n    name: 'Фамилия Имя Отчество',\r\n    text: 'Указывать ФИО нужно в сокращенном виде - Фамилия И.О.',\r\n    example: ['Титаренко А.К.', 'Ананян В.В.']\r\n  },\r\n  {\r\n    name: 'Место рождения - Государство',\r\n    text: 'Указываейте страну рождения',\r\n    example: []\r\n  },\r\n  {\r\n    name: 'Город или населенный пункт',\r\n    text: 'Указываейте город рождения в котором родился иностранный гражданин',\r\n    example: ['Харьков', 'Париж']\r\n  },\r\n  {\r\n    name: 'Гражданство (подданство)',\r\n    text: 'Что-то там про гражнаство',\r\n    example: ['Украина', 'Россия', 'Мадагаскар']\r\n  },\r\n  {\r\n    name: 'Вид документа',\r\n    text: 'Что-то про тип документа (много текста...)',\r\n    example: ['333-3333']\r\n  },\r\n  {\r\n    name: 'Серия документа',\r\n    text: 'Серия документа - четыре буквы или цифры, без пробелов',\r\n    example: ['IK53']\r\n  },\r\n  {\r\n    name: 'Серия',\r\n    text: 'Серия документа - четыре буквы или цифры, без пробелов',\r\n    example: ['IK53']\r\n  },\r\n  {\r\n    name: 'Номер документа',\r\n    text: 'Номер документа, только арабские цифры без \\'№\\' ',\r\n    example: ['1234564233',]\r\n  },\r\n  {\r\n    name: 'Номер',\r\n    text: 'Номер документа, только арабские цифры без \\'№\\' ',\r\n    example: ['1234564233',]\r\n  },\r\n  {\r\n    name: 'Профессия',\r\n    text: 'Указывать в случае наличия',\r\n    example: ['Програмист', 'Дизайнер', 'Аналист']\r\n  },\r\n  {\r\n    name: 'Год рождения',\r\n    text: 'Указывать только год рождения',\r\n    example: ['195X']\r\n  },\r\n  {\r\n    name: 'Серия и номер паспорта',\r\n    text: 'Серия номера через проблем',\r\n    example: ['IK53 2232XX']\r\n  },\r\n]\r\n\r\n\r\nconst defaultState = {\r\n  name: 'default',\r\n  text: 'Место для подсказок и примеров',\r\n  example: []\r\n}\r\n\r\nexport const promptReducer = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case CHANGE_PROMPTS:\r\n      let prompt = prompts.find((el) => {\r\n        if (el.name == action.payload) {\r\n          return el\r\n        }\r\n      })\r\n      prompt === undefined ? prompt = defaultState : prompt = prompt\r\n      return {\r\n        ...state,\r\n        name: prompt.name,\r\n        text: prompt.text,\r\n        example: prompt.example\r\n      }\r\n    default:\r\n      break\r\n  }\r\n\r\n  return state;\r\n}","export const CHANGE_VISION_STATUS = 'CHANGE_VISION_STATUS'\r\n\r\nexport const checkInputsValue = (status, index) => ({\r\n  type: CHANGE_VISION_STATUS,\r\n  payload: status,\r\n  index: index\r\n})\r\n\r\n","import { CHANGE_VISION_STATUS } from './actions';\r\n\r\nconst defaultState = [\r\n  { status: true },\r\n  { status: false },\r\n  { status: false },\r\n  { status: false },\r\n  { status: false },\r\n  { status: false },\r\n  { status: false },\r\n  { status: false },\r\n  { status: false },\r\n  { status: false },\r\n]\r\n\r\nexport const formBoxReducer = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case CHANGE_VISION_STATUS:\r\n      state[action.index + 1].status = action.payload\r\n      return [\r\n        ...state\r\n      ]\r\n    default:\r\n      break\r\n  }\r\n\r\n  return state;\r\n}","import { combineReducers } from \"redux\";\r\nimport { promptReducer } from \"./prompt/reducers\";\r\nimport { formBoxReducer } from \"./formBoxes/reducers\";\r\n\r\nexport default combineReducers({\r\n  prompt: promptReducer,\r\n  boxStatus: formBoxReducer\r\n});","export const CHANGE_PROMPTS = 'CHANGE_PROMPTS'\r\n\r\nexport const getInputName = (name) => ({\r\n  type: CHANGE_PROMPTS,\r\n  payload: name\r\n})\r\n\r\n\r\n\r\n","export const InputsParameters = [\r\n  {\r\n    title: 'Данные иностранного гражданина',\r\n    typeTitle: 'main',\r\n    type: ['text'],\r\n    textInputs: [['Фамилия', 'Имя Отчество', 'Гражданство (подданство)']],\r\n    typeInputText: 'last',\r\n    indexDataInput: [false]\r\n  },\r\n  {\r\n    title: 'Дата и место рождения',\r\n    typeTitle: 'additional',\r\n    type: ['text'],\r\n    textInputs: [['День рождения', 'Место рождения - Государство', 'Город или населенный пункт']],\r\n    typeInputText: 'last',\r\n    indexDataInput: [0]\r\n  },\r\n  {\r\n    title: 'Пол',\r\n    typeTitle: 'additional',\r\n    type: ['checkbox'],\r\n    textInputs: [['Мужской', 'Женский']],\r\n    typeInputText: 'none',\r\n    indexDataInput: [false]\r\n  },\r\n  {\r\n    title: 'Документ удостоверяющий личность',\r\n    typeTitle: 'additional',\r\n    type: ['text'],\r\n    textInputs: [['Вид документа', 'Серия документа', 'Номер документа', \"Дата выдачи\", \"Действителен до\"]],\r\n    typeInputText: 'first',\r\n    indexDataInput: [3, 4]\r\n  },\r\n  {\r\n    title: 'Данные документа подтверждающего право на пребывания в РФ',\r\n    typeTitle: 'main',\r\n    type: ['checkbox', 'text'],\r\n    textInputs: [['Виза', 'Вид на жительство', \"Разрешение на временное проживание\"], [\"Серия документа\", \"Номер документа\", \"Дата выдачи\", \"Действителен до\"]],\r\n    typeInputText: 'none',\r\n    indexDataInput: [2, 3],\r\n    additional: 'addTitle'\r\n  },\r\n  {\r\n    title: 'Цель въезда в РФ',\r\n    typeTitle: 'additional',\r\n    type: ['checkbox', 'text'],\r\n    textInputs: [['Служебная', 'Туризм', \"Деловая\", \"Учеба\", \"Работа\", \"Частная\", \"Транзит\", \"Гуманитарная\", \"Другая\"], [\"Профессия\", \"Дата въезда\", \"Дата выезда\"]],\r\n    typeInputText: 'first',\r\n    indexDataInput: [1, 2]\r\n  },\r\n  {\r\n    title: 'Данные миграционной карты',\r\n    typeTitle: 'additional',\r\n    type: ['text'],\r\n    textInputs: [[\"Серия\", \"Номер\"]],\r\n    typeInputText: 'none',\r\n    indexDataInput: [false]\r\n  },\r\n  {\r\n    title: 'Сведения о законном представителе',\r\n    typeTitle: 'additional',\r\n    type: ['text'],\r\n    textInputs: [[\"Фамилия Имя Отчество\", \"Год рождения\", \"Серия и номер паспорта\"]],\r\n    typeInputText: 'first',\r\n    indexDataInput: [false],\r\n    additional: 'addSpan'\r\n  },\r\n  {\r\n    title: 'Пол',\r\n    typeTitle: 'additional',\r\n    type: ['checkbox'],\r\n    textInputs: [[\"Мужской\", \"Женский\"]],\r\n    typeInputText: 'none',\r\n    indexDataInput: [false]\r\n  },\r\n]\r\n\r\n","import React, { useState } from 'react';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nfunction ItemInput(props) {\r\n\r\n  const [startDate, setStartDate] = useState(null);\r\n\r\n  const validCard = (e) => {\r\n    const regExp = /[0-9]{3}[-][0-9]/\r\n\r\n    regExp.test(e.target.value) === false\r\n      ? e.target.style.background = 'red'\r\n      : e.target.style.background = 'transparent'\r\n  }\r\n\r\n  return (\r\n    <li\r\n      className={props.width === true\r\n        ? 'form__item-max form__item'\r\n        : 'form__item'\r\n      }\r\n      key={props.index}\r\n    >\r\n      {props.typeInput === true\r\n        ? <DatePicker className=\"form__input\"\r\n          selected={startDate}\r\n          onChange={date => setStartDate(date)}\r\n          placeholderText={props.text}\r\n          showYearDropdown\r\n          dateFormatCalendar=\"MMMM\"\r\n          yearDropdownItemNumber={15}\r\n          scrollableYearDropdown\r\n        />\r\n        : <input\r\n          className=\"form__input\"\r\n          placeholder={props.text}\r\n          type=\"text\"\r\n          name={props.text}\r\n\r\n          onBlur={\r\n            props.text === 'Вид документа'\r\n              ? validCard\r\n              : () => { }\r\n          }\r\n        >\r\n        </input>\r\n      }\r\n      <span className=\"form__underline\"></span>\r\n\r\n    </li >\r\n  )\r\n\r\n}\r\n\r\nexport default ItemInput","import React from 'react';\r\nimport ItemInput from './ItemInput/ItemInput'\r\n\r\nfunction InputText(props) {\r\n\r\n  const indexLastItem = props.textInputs.length - 1\r\n\r\n  const mapInputsText = props.textInputs.map((text, index) => {\r\n\r\n    switch (props.typeInputText) {\r\n      case 'first':\r\n        if (index === 0) {\r\n          return (\r\n            <ItemInput key={index} text={text} width={true} typeInput={\r\n              props.indexDataInput.includes(index)\r\n            }\r\n            />\r\n          )\r\n        } else {\r\n          return (\r\n            <ItemInput key={index} text={text} width={false} typeInput={\r\n              props.indexDataInput.includes(index)\r\n            }\r\n            />\r\n          )\r\n        }\r\n      case 'last':\r\n        if (index === indexLastItem) {\r\n          return (\r\n            <ItemInput key={index} text={text} width={true} typeInput={\r\n              props.indexDataInput.includes(index)\r\n            }\r\n            />\r\n          )\r\n        } else {\r\n          return (\r\n            <ItemInput key={index} text={text} width={false} typeInput={\r\n              props.indexDataInput.includes(index)\r\n            }\r\n            />\r\n          )\r\n        }\r\n      case 'none':\r\n        return (\r\n          <ItemInput key={index} text={text} width={false} typeInput={\r\n            props.indexDataInput.includes(index)\r\n          }\r\n          />\r\n        )\r\n      default:\r\n        break\r\n    }\r\n  })\r\n\r\n\r\n  return (\r\n    <ul className=\"form__list\">\r\n      {mapInputsText}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default InputText","import React from 'react';\r\n\r\nfunction InputCheckBox(props) {\r\n\r\n  const mapInputsCkeckbox = props.textInputs.map((text, index) => {\r\n\r\n    return (\r\n      <label className=\"form__label\" key={index}>\r\n        <input type=\"checkbox\" className=\"from__checkbox\"></input>\r\n        <span className=\"form__checkbox-text\">{text}</span>\r\n      </label>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <div className=\"form__checkbox-container\">\r\n      {mapInputsCkeckbox}\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default InputCheckBox","import React from 'react';\r\n\r\nfunction AddTitle(props) {\r\n\r\n  return (\r\n    <h2 className='form__title-additional' style={{ marginTop: '40px' }}>Вид документа</h2>\r\n  )\r\n}\r\n\r\nexport default AddTitle","import React from 'react';\r\n\r\nfunction AddSpan(props) {\r\n\r\n  return (\r\n    <span className='additional-span'>Заполняется только в случае подачи заявления в отношении несовершеннолетнего иностранного гражданина</ span>\r\n  )\r\n}\r\n\r\nexport default AddSpan","import React from 'react';\r\nimport InputText from './InputText/InputText';\r\nimport InputCheckBox from './InputCheckbox/InputCheckbox'\r\nimport AddTitle from './AddBlock/AddTitle'\r\nimport AddSpan from './AddBlock/AddSpan'\r\nimport { connect } from 'react-redux';\r\nimport { checkInputsValue } from './../../../store/formBoxes/actions'\r\n\r\nfunction FormBox(props) {\r\n\r\n  const checkValueInput = (e) => {\r\n\r\n    const box = e.target.closest('.form__box')\r\n    let inputTextStatus,\r\n      inputCheckboxStatus,\r\n      boxStatus;\r\n\r\n    for (let i = 0; i < box.children.length; i++) {\r\n\r\n      if (box.children[i].classList.contains('form__list')) {\r\n\r\n        for (let x = 0; x < box.children[i].children.length; x++) {\r\n\r\n          if (box.children[i].children[x].children[0].classList.contains(\"react-datepicker-wrapper\")) {\r\n            if (box.children[i].children[x].children[0].children[0].children[0].value !== \"\") {\r\n              inputTextStatus = true\r\n            } else {\r\n              inputTextStatus = false\r\n              break\r\n            }\r\n          }\r\n\r\n          if (box.children[i].children[x].children[0].value !== \"\") {\r\n            inputTextStatus = true\r\n          } else {\r\n            inputTextStatus = false\r\n            break\r\n          }\r\n        }\r\n      } if (box.children[i].classList.contains('form__checkbox-container')) {\r\n\r\n        for (let x = 0; x < box.children[i].children.length; x++) {\r\n\r\n          if (box.children[i].children[x].children[0].checked) {\r\n            inputCheckboxStatus = true\r\n            break\r\n          } else {\r\n            inputCheckboxStatus = false\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (inputTextStatus === undefined || inputCheckboxStatus === undefined) {\r\n      if (inputTextStatus === undefined) {\r\n        boxStatus = inputCheckboxStatus\r\n      }\r\n      if (inputCheckboxStatus === undefined) {\r\n        boxStatus = inputTextStatus\r\n      }\r\n    }\r\n    if (inputTextStatus && inputCheckboxStatus === true) {\r\n      boxStatus = true\r\n    }\r\n\r\n    if (boxStatus === true) props.checkInputsValue(true, props.num)\r\n\r\n  }\r\n\r\n  const mapInputs = props.state.type.map((type, index) => {\r\n    switch (type) {\r\n      case 'text':\r\n        return <InputText\r\n          textInputs={props.state.textInputs[index]}\r\n          typeInputText={props.state.typeInputText}\r\n          indexDataInput={props.state.indexDataInput}\r\n          key={index}\r\n          num={index}\r\n        />\r\n      case 'checkbox':\r\n        return <InputCheckBox\r\n          textInputs={props.state.textInputs[index]}\r\n          key={index}\r\n          num={index}\r\n        />\r\n      default:\r\n        break\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div\r\n      onClick={checkValueInput}\r\n      className=\"form__box\"\r\n      style={props.boxStatus[props.num].status === true\r\n        ? { display: 'flex' }\r\n        : { display: 'none' }\r\n      }\r\n      key={props.num}\r\n      data-index={`${props.num}`}>\r\n      <h2 className={\r\n        props.state.typeTitle === 'main'\r\n          ? 'form__title-main'\r\n          : 'form__title-additional'\r\n      } key={props.state.num}>{props.state.title}</h2>\r\n\r\n      {props.state.additional === 'addSpan' ? <AddSpan />\r\n        : props.state.additional === 'addTitle' ? <AddTitle />\r\n          : <span></span>}\r\n\r\n      {mapInputs}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    boxStatus: state.boxStatus\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  checkInputsValue\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormBox)\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getInputName } from '../../../store/prompt/actions';\r\n\r\n\r\nfunction Prompts(props) {\r\n  // console.log(props)\r\n\r\n  const mapExample = props.prompt.example.map((example, index) => {\r\n    return (\r\n      <li className=\"prompt__item\" key={index}>- {example}</li>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <div className=\"form__prompt-container\">\r\n      <h3 className='prompt__title'>Подсказка:</h3>\r\n      <p className='propmpt__text'>{props.prompt.text}</p>\r\n      {props.prompt.example.length > 0\r\n        ? <h6 className='prompt__title-exmaple'>Пример:</h6>\r\n        : <span></span>\r\n\r\n      }\r\n      <ul className=\"prompt__list\">\r\n        {mapExample}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    prompt: state.prompt\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Prompts)\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { checkInputsValue } from './../../../store/formBoxes/actions'\r\n\r\nfunction ButtunSave(props) {\r\n\r\n  const index = props.boxStatus.length - 1\r\n\r\n  return (\r\n    <div className='form__box'\r\n      style={props.boxStatus[index].status === false\r\n        ? { display: 'none' }\r\n        : { display: 'flex' }\r\n      }>\r\n      <input type=\"submit\" value=\"Send Request\"></input>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    boxStatus: state.boxStatus\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  checkInputsValue\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ButtunSave)\r\n","import React from 'react';\r\nimport { InputsParameters } from '../../inputsParameters/inputsParameters';\r\nimport FormBox from './FormBox/FormBox'\r\nimport Prompt from './Prompt/Prompt'\r\nimport { connect } from 'react-redux';\r\nimport { getInputName } from '../../store/prompt/actions';\r\nimport ButtunSave from './ButtonSave/ButtonSave'\r\n\r\n\r\nconst MainContainer = (props) => {\r\n\r\n  const findPropmpt = (e) => {\r\n    props.getInputName(e.target.name)\r\n  }\r\n\r\n  const mapBoxes = InputsParameters.map((param, index) => {\r\n    return <FormBox state={param} key={index} num={index} />\r\n  })\r\n\r\n  return (\r\n\r\n    <section className=\"form-page\" onClick={findPropmpt}>\r\n      <form action=\"\" className=\"form\">\r\n        <div className=\"form__container\">\r\n          <div className=\"form__input-container\">\r\n            {mapBoxes}\r\n            <ButtunSave />\r\n          </div>\r\n          <Prompt />\r\n        </div>\r\n      </form>\r\n    </section>\r\n\r\n  )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  getInputName\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainContainer)","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport rootReducer from './store/reducers';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport { HashRouter, Route } from \"react-router-dom\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport MainContainer from './components/MainContainer/MainContainer'\n\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <MainContainer />\n    </Provider>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}